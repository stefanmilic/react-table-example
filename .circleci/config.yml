version: 2.1
# orbs:
#   aws-s3: circleci/aws-s3@3.0

executors:
  my-executor:
    docker:
      - image: circleci/node:14
    environment:
      BASH_ENV: bash_env
    working_directory: ~/repo


jobs:
  build:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache
          key: v1-dependencies-{{ checksum "package.json" }}
      # - run: yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  build_dev:
    executor: my-executor
    steps:
      - attach_workspace:
          at: ~/repo
      - run: yarn build
      - run:
          name: Deploy on AWS
          command: ./deploy.sh "$CIRCLE_BRANCH"
      # - aws-s3/sync:
      #     arguments: |
      #       --acl public-read \
      #       --cache-control "max-age=86400"
      #     from: build
      #     to: 's3://$S3_BUCKET_NAME-dev'

  build_prod:
    executor: my-executor
    steps:
      - attach_workspace:
          at: ~/repo
      - run: yarn build
      - run:
          name: Install pip
          command: sudo apt-get update && sudo apt-get install python3-pip
      - run:
          name: Install aws cli
          command: sudo pip3 install -q awscli --upgrade
      - run:
          name: Deploy on AWS
          command: ./deploy.sh "$CIRCLE_BRANCH"
      # - aws-s3/sync:
      #     arguments: |
      #       --delete \
      #       --acl public-read \
      #       --cache-control "max-age=86400"
      #     from: build
      #     # add env variable to project settings
      #     to: 's3://football-widget-test-prod'

workflows:
  dev-build:
    jobs:
      - build:
          filters:
            branches:
              ignore: /(^develop$)|(^master$)/
  dev-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /develop/
      - build_dev:
          requires:
            - build
          filters:
            branches:
              only: /develop/
  prod-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /master/
      - build_prod:
          requires:
            - build
          filters:
            branches:
              only: /master/